// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentFileShare6.data;

#nullable disable

namespace StudentFileShare6.Migrations
{
    [DbContext(typeof(UniversityContext))]
    partial class UniversityContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StudentFileShare6.Models.Course", b =>
                {
                    b.Property<string>("CourseID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniversitiesSchoolID")
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("CourseID");

                    b.HasIndex("UniversitiesSchoolID");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("StudentFileShare6.Models.Document", b =>
                {
                    b.Property<string>("DocumentID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Anonymous")
                        .HasColumnType("bit");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("CourseID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DislikeNumber")
                        .HasColumnType("int");

                    b.Property<string>("FirstPageImageLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LikeNumber")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Rating")
                        .HasColumnType("real");

                    b.Property<string>("SchoolID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniversitySchoolID")
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("DocumentID");

                    b.HasIndex("CourseID");

                    b.HasIndex("UniversitySchoolID");

                    b.ToTable("Document");
                });

            modelBuilder.Entity("University", b =>
                {
                    b.Property<string>("SchoolID")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("SchoolID");

                    b.ToTable("universities");
                });

            modelBuilder.Entity("StudentFileShare6.Models.Course", b =>
                {
                    b.HasOne("University", "Universities")
                        .WithMany("Courses")
                        .HasForeignKey("UniversitiesSchoolID");

                    b.Navigation("Universities");
                });

            modelBuilder.Entity("StudentFileShare6.Models.Document", b =>
                {
                    b.HasOne("StudentFileShare6.Models.Course", "Course")
                        .WithMany("Documents")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("University", "University")
                        .WithMany("Documents")
                        .HasForeignKey("UniversitySchoolID");

                    b.Navigation("Course");

                    b.Navigation("University");
                });

            modelBuilder.Entity("StudentFileShare6.Models.Course", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("University", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Documents");
                });
#pragma warning restore 612, 618
        }
    }
}
